#########################################################
###################### Properties ######################
#########################################################
spring.application.name => Name own project
spring.profiles.active => Active profile properties, doesn't matter name, but it's so important this name will be same that own file properties, "dev" = "application-dev.properties"
spring.datasource.url => data base properties, type, url, name ...
spring.datasource.username => data base username
spring.datasource.password => password username
spring.jpa.properties.hibernate.dialect => Specific to hibernate schema data base for hibernate will be more effective with sintaxis structures

#########################################################
#################### JPA Annotations ####################
#########################################################

@Entity: it's a java class that represents a table of a database
@Table: Allow to receive database table name
@Column: Allow to configure a specific name of an attribute own object
@id: Indicate that attribute contains a primary key
@EmbededID: Indicate that attribute contains a composed primary key
@GenerateValue: Allow assign a default value in an attribute own object
@OneToMany: Allow configured a relation between one object to many objects
@ManyToOne: Allow configured a relation between many objects to one object